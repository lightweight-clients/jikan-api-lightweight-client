// noinspection JSUnusedGlobalSymbols

/**
 * This file is auto-generated by the Jikan API generator.
 * Do not modify directly.
 * Configure the client via 'core.ts'.
 */

import type * as types from './types';
import { client_fetch } from './core';

/**
 * Returns complete anime resource data
 */
export const getAnimeFullById = async (
  id: number,
): Promise<
  types.GetAnimeFullByIdOkResponse | types.GetAnimeFullByIdResponse
> => {
  return await client_fetch<never, types.GetAnimeFullByIdResponse>(
    `anime/${id}/full`,
  );
};

/**
 * Returns anime resource
 */
export const getAnimeById = async (
  id: number,
): Promise<types.GetAnimeByIdOkResponse | types.GetAnimeByIdResponse> => {
  return await client_fetch<never, types.GetAnimeByIdResponse>(`anime/${id}`);
};

/**
 * Returns anime characters resource
 */
export const getAnimeCharacters = async (
  id: number,
): Promise<
  types.GetAnimeCharactersOkResponse | types.GetAnimeCharactersResponse
> => {
  return await client_fetch<never, types.GetAnimeCharactersResponse>(
    `anime/${id}/characters`,
  );
};

/**
 * Returns anime staff resource
 */
export const getAnimeStaff = async (
  id: number,
): Promise<types.GetAnimeStaffOkResponse | types.GetAnimeStaffResponse> => {
  return await client_fetch<never, types.GetAnimeStaffResponse>(
    `anime/${id}/staff`,
  );
};

/**
 * Returns a list of anime episodes
 */
export const getAnimeEpisodes = async (
  id: number,
): Promise<
  types.GetAnimeEpisodesOkResponse | types.GetAnimeEpisodesResponse
> => {
  return await client_fetch<never, types.GetAnimeEpisodesResponse>(
    `anime/${id}/episodes`,
  );
};

/**
 * Returns a single anime episode resource
 */
export const getAnimeEpisodeById = async (
  id: number,
  episode: number,
): Promise<
  types.GetAnimeEpisodeByIdOkResponse | types.GetAnimeEpisodeByIdResponse
> => {
  return await client_fetch<never, types.GetAnimeEpisodeByIdResponse>(
    `anime/${id}/episodes/${episode}`,
  );
};

/**
 * Returns a list of news articles related to the entry
 */
export const getAnimeNews = async (
  id: number,
): Promise<types.GetAnimeNewsOkResponse | types.GetAnimeNewsResponse> => {
  return await client_fetch<never, types.GetAnimeNewsResponse>(
    `anime/${id}/news`,
  );
};

/**
 * Returns a list of forum topics related to the entry
 */
export const getAnimeForum = async (
  id: number,
  args: types.GetAnimeForumData,
): Promise<types.GetAnimeForumOkResponse | types.GetAnimeForumResponse> => {
  return await client_fetch<
    types.GetAnimeForumData,
    types.GetAnimeForumResponse
  >(`anime/${id}/forum`, args);
};

/**
 * Returns videos related to the entry
 */
export const getAnimeVideos = async (
  id: number,
): Promise<types.GetAnimeVideosOkResponse | types.GetAnimeVideosResponse> => {
  return await client_fetch<never, types.GetAnimeVideosResponse>(
    `anime/${id}/videos`,
  );
};

/**
 * Returns episode videos related to the entry
 */
export const getAnimeVideosEpisodes = async (
  id: number,
): Promise<
  types.GetAnimeVideosEpisodesOkResponse | types.GetAnimeVideosEpisodesResponse
> => {
  return await client_fetch<never, types.GetAnimeVideosEpisodesResponse>(
    `anime/${id}/videos/episodes`,
  );
};

/**
 * Returns pictures related to the entry
 */
export const getAnimePictures = async (
  id: number,
): Promise<
  types.GetAnimePicturesOkResponse | types.GetAnimePicturesResponse
> => {
  return await client_fetch<never, types.GetAnimePicturesResponse>(
    `anime/${id}/pictures`,
  );
};

/**
 * Returns anime statistics
 */
export const getAnimeStatistics = async (
  id: number,
): Promise<
  types.GetAnimeStatisticsOkResponse | types.GetAnimeStatisticsResponse
> => {
  return await client_fetch<never, types.GetAnimeStatisticsResponse>(
    `anime/${id}/statistics`,
  );
};

/**
 * Returns anime statistics
 */
export const getAnimeMoreInfo = async (
  id: number,
): Promise<
  types.GetAnimeMoreInfoOkResponse | types.GetAnimeMoreInfoResponse
> => {
  return await client_fetch<never, types.GetAnimeMoreInfoResponse>(
    `anime/${id}/moreinfo`,
  );
};

/**
 * Returns anime recommendations
 */
export const getAnimeRecommendations = async (
  id: number,
): Promise<
  | types.GetAnimeRecommendationsOkResponse
  | types.GetAnimeRecommendationsResponse
> => {
  return await client_fetch<never, types.GetAnimeRecommendationsResponse>(
    `anime/${id}/recommendations`,
  );
};

/**
 * Returns a list of users who have added/updated/removed the entry on their list
 */
export const getAnimeUserUpdates = async (
  id: number,
): Promise<
  types.GetAnimeUserUpdatesOkResponse | types.GetAnimeUserUpdatesResponse
> => {
  return await client_fetch<never, types.GetAnimeUserUpdatesResponse>(
    `anime/${id}/userupdates`,
  );
};

/**
 * Returns anime reviews
 */
export const getAnimeReviews = async (
  id: number,
): Promise<types.GetAnimeReviewsOkResponse | types.GetAnimeReviewsResponse> => {
  return await client_fetch<never, types.GetAnimeReviewsResponse>(
    `anime/${id}/reviews`,
  );
};

/**
 * Returns anime relations
 */
export const getAnimeRelations = async (
  id: number,
): Promise<
  types.GetAnimeRelationsOkResponse | types.GetAnimeRelationsResponse
> => {
  return await client_fetch<never, types.GetAnimeRelationsResponse>(
    `anime/${id}/relations`,
  );
};

/**
 * Returns anime themes
 */
export const getAnimeThemes = async (
  id: number,
): Promise<types.GetAnimeThemesOkResponse | types.GetAnimeThemesResponse> => {
  return await client_fetch<never, types.GetAnimeThemesResponse>(
    `anime/${id}/themes`,
  );
};

/**
 * Returns anime external links
 */
export const getAnimeExternal = async (
  id: number,
): Promise<
  types.GetAnimeExternalOkResponse | types.GetAnimeExternalResponse
> => {
  return await client_fetch<never, types.GetAnimeExternalResponse>(
    `anime/${id}/external`,
  );
};

/**
 * Returns anime streaming links
 */
export const getAnimeStreaming = async (
  id: number,
): Promise<
  types.GetAnimeStreamingOkResponse | types.GetAnimeStreamingResponse
> => {
  return await client_fetch<never, types.GetAnimeStreamingResponse>(
    `anime/${id}/streaming`,
  );
};

/**
 * Returns complete character resource data
 */
export const getCharacterFullById = async (
  id: number,
): Promise<
  types.GetCharacterFullByIdOkResponse | types.GetCharacterFullByIdResponse
> => {
  return await client_fetch<never, types.GetCharacterFullByIdResponse>(
    `characters/${id}/full`,
  );
};

/**
 * Returns character resource
 */
export const getCharacterById = async (
  id: number,
): Promise<
  types.GetCharacterByIdOkResponse | types.GetCharacterByIdResponse
> => {
  return await client_fetch<never, types.GetCharacterByIdResponse>(
    `characters/${id}`,
  );
};

/**
 * Returns anime that character is in
 */
export const getCharacterAnime = async (
  id: number,
): Promise<
  types.GetCharacterAnimeOkResponse | types.GetCharacterAnimeResponse
> => {
  return await client_fetch<never, types.GetCharacterAnimeResponse>(
    `characters/${id}/anime`,
  );
};

/**
 * Returns manga that character is in
 */
export const getCharacterManga = async (
  id: number,
): Promise<
  types.GetCharacterMangaOkResponse | types.GetCharacterMangaResponse
> => {
  return await client_fetch<never, types.GetCharacterMangaResponse>(
    `characters/${id}/manga`,
  );
};

/**
 * Returns the character&#39;s voice actors
 */
export const getCharacterVoiceActors = async (
  id: number,
): Promise<
  | types.GetCharacterVoiceActorsOkResponse
  | types.GetCharacterVoiceActorsResponse
> => {
  return await client_fetch<never, types.GetCharacterVoiceActorsResponse>(
    `characters/${id}/voices`,
  );
};

/**
 * Returns pictures related to the entry
 */
export const getCharacterPictures = async (
  id: number,
): Promise<
  types.GetCharacterPicturesOkResponse | types.GetCharacterPicturesResponse
> => {
  return await client_fetch<never, types.GetCharacterPicturesResponse>(
    `characters/${id}/pictures`,
  );
};

/**
 * Returns Club Resource
 */
export const getClubsById = async (
  id: number,
): Promise<types.GetClubsByIdOkResponse | types.GetClubsByIdResponse> => {
  return await client_fetch<never, types.GetClubsByIdResponse>(`clubs/${id}`);
};

/**
 * Returns Club Members Resource
 */
export const getClubMembers = async (
  id: number,
): Promise<types.GetClubMembersOkResponse | types.GetClubMembersResponse> => {
  return await client_fetch<never, types.GetClubMembersResponse>(
    `clubs/${id}/members`,
  );
};

/**
 * Returns Club Staff
 */
export const getClubStaff = async (
  id: number,
): Promise<types.GetClubStaffOkResponse | types.GetClubStaffResponse> => {
  return await client_fetch<never, types.GetClubStaffResponse>(
    `clubs/${id}/staff`,
  );
};

/**
 * Returns Club Relations
 */
export const getClubRelations = async (
  id: number,
): Promise<
  types.GetClubRelationsOkResponse | types.GetClubRelationsResponse
> => {
  return await client_fetch<never, types.GetClubRelationsResponse>(
    `clubs/${id}/relations`,
  );
};

/**
 * Returns entry genres, explicit_genres, themes and demographics
 */
export const getAnimeGenres = async (
  args: types.GetAnimeGenresData,
): Promise<types.GetAnimeGenresOkResponse | types.GetAnimeGenresResponse> => {
  return await client_fetch<
    types.GetAnimeGenresData,
    types.GetAnimeGenresResponse
  >(`genres/anime`, args);
};

/**
 * Returns entry genres, explicit_genres, themes and demographics
 */
export const getMangaGenres = async (
  args: types.GetMangaGenresData,
): Promise<types.GetMangaGenresOkResponse | types.GetMangaGenresResponse> => {
  return await client_fetch<
    types.GetMangaGenresData,
    types.GetMangaGenresResponse
  >(`genres/manga`, args);
};

/**
 * Returns magazines collection
 */
export const getMagazines = async (
  args: types.GetMagazinesData,
): Promise<types.GetMagazinesOkResponse | types.GetMagazinesResponse> => {
  return await client_fetch<types.GetMagazinesData, types.GetMagazinesResponse>(
    `magazines`,
    args,
  );
};

/**
 * Returns complete manga resource data
 */
export const getMangaFullById = async (
  id: number,
): Promise<
  types.GetMangaFullByIdOkResponse | types.GetMangaFullByIdResponse
> => {
  return await client_fetch<never, types.GetMangaFullByIdResponse>(
    `manga/${id}/full`,
  );
};

/**
 * Returns pictures related to the entry
 */
export const getMangaById = async (
  id: number,
): Promise<types.GetMangaByIdOkResponse | types.GetMangaByIdResponse> => {
  return await client_fetch<never, types.GetMangaByIdResponse>(`manga/${id}`);
};

/**
 * Returns manga characters resource
 */
export const getMangaCharacters = async (
  id: number,
): Promise<
  types.GetMangaCharactersOkResponse | types.GetMangaCharactersResponse
> => {
  return await client_fetch<never, types.GetMangaCharactersResponse>(
    `manga/${id}/characters`,
  );
};

/**
 * Returns a list of manga news topics
 */
export const getMangaNews = async (
  id: number,
): Promise<types.GetMangaNewsOkResponse | types.GetMangaNewsResponse> => {
  return await client_fetch<never, types.GetMangaNewsResponse>(
    `manga/${id}/news`,
  );
};

/**
 * Returns a list of manga forum topics
 */
export const getMangaTopics = async (
  id: number,
  args: types.GetMangaTopicsData,
): Promise<types.GetMangaTopicsOkResponse | types.GetMangaTopicsResponse> => {
  return await client_fetch<
    types.GetMangaTopicsData,
    types.GetMangaTopicsResponse
  >(`manga/${id}/forum`, args);
};

/**
 * Returns a list of manga pictures
 */
export const getMangaPictures = async (
  id: number,
): Promise<
  types.GetMangaPicturesOkResponse | types.GetMangaPicturesResponse
> => {
  return await client_fetch<never, types.GetMangaPicturesResponse>(
    `manga/${id}/pictures`,
  );
};

/**
 * Returns anime statistics
 */
export const getMangaStatistics = async (
  id: number,
): Promise<
  types.GetMangaStatisticsOkResponse | types.GetMangaStatisticsResponse
> => {
  return await client_fetch<never, types.GetMangaStatisticsResponse>(
    `manga/${id}/statistics`,
  );
};

/**
 * Returns manga moreinfo
 */
export const getMangaMoreInfo = async (
  id: number,
): Promise<
  types.GetMangaMoreInfoOkResponse | types.GetMangaMoreInfoResponse
> => {
  return await client_fetch<never, types.GetMangaMoreInfoResponse>(
    `manga/${id}/moreinfo`,
  );
};

/**
 * Returns manga recommendations
 */
export const getMangaRecommendations = async (
  id: number,
): Promise<
  | types.GetMangaRecommendationsOkResponse
  | types.GetMangaRecommendationsResponse
> => {
  return await client_fetch<never, types.GetMangaRecommendationsResponse>(
    `manga/${id}/recommendations`,
  );
};

/**
 * Returns manga user updates
 */
export const getMangaUserUpdates = async (
  id: number,
): Promise<
  types.GetMangaUserUpdatesOkResponse | types.GetMangaUserUpdatesResponse
> => {
  return await client_fetch<never, types.GetMangaUserUpdatesResponse>(
    `manga/${id}/userupdates`,
  );
};

/**
 * Returns manga reviews
 */
export const getMangaReviews = async (
  id: number,
): Promise<types.GetMangaReviewsOkResponse | types.GetMangaReviewsResponse> => {
  return await client_fetch<never, types.GetMangaReviewsResponse>(
    `manga/${id}/reviews`,
  );
};

/**
 * Returns manga relations
 */
export const getMangaRelations = async (
  id: number,
): Promise<
  types.GetMangaRelationsOkResponse | types.GetMangaRelationsResponse
> => {
  return await client_fetch<never, types.GetMangaRelationsResponse>(
    `manga/${id}/relations`,
  );
};

/**
 * Returns manga external links
 */
export const getMangaExternal = async (
  id: number,
): Promise<
  types.GetMangaExternalOkResponse | types.GetMangaExternalResponse
> => {
  return await client_fetch<never, types.GetMangaExternalResponse>(
    `manga/${id}/external`,
  );
};

/**
 * Returns complete character resource data
 */
export const getPersonFullById = async (
  id: number,
): Promise<
  types.GetPersonFullByIdOkResponse | types.GetPersonFullByIdResponse
> => {
  return await client_fetch<never, types.GetPersonFullByIdResponse>(
    `people/${id}/full`,
  );
};

/**
 * Returns pictures related to the entry
 */
export const getPersonById = async (
  id: number,
): Promise<types.GetPersonByIdOkResponse | types.GetPersonByIdResponse> => {
  return await client_fetch<never, types.GetPersonByIdResponse>(`people/${id}`);
};

/**
 * Returns person&#39;s anime staff positions
 */
export const getPersonAnime = async (
  id: number,
): Promise<types.GetPersonAnimeOkResponse | types.GetPersonAnimeResponse> => {
  return await client_fetch<never, types.GetPersonAnimeResponse>(
    `people/${id}/anime`,
  );
};

/**
 * Returns person&#39;s voice acting roles
 */
export const getPersonVoices = async (
  id: number,
): Promise<types.GetPersonVoicesOkResponse | types.GetPersonVoicesResponse> => {
  return await client_fetch<never, types.GetPersonVoicesResponse>(
    `people/${id}/voices`,
  );
};

/**
 * Returns person&#39;s published manga works
 */
export const getPersonManga = async (
  id: number,
): Promise<types.GetPersonMangaOkResponse | types.GetPersonMangaResponse> => {
  return await client_fetch<never, types.GetPersonMangaResponse>(
    `people/${id}/manga`,
  );
};

/**
 * Returns a list of pictures of the person
 */
export const getPersonPictures = async (
  id: number,
): Promise<
  types.GetPersonPicturesOkResponse | types.GetPersonPicturesResponse
> => {
  return await client_fetch<never, types.GetPersonPicturesResponse>(
    `people/${id}/pictures`,
  );
};

/**
 * Returns producer resource
 */
export const getProducerById = async (
  id: number,
): Promise<types.GetProducerByIdOkResponse | types.GetProducerByIdResponse> => {
  return await client_fetch<never, types.GetProducerByIdResponse>(
    `producers/${id}`,
  );
};

/**
 * Returns producer resource
 */
export const getProducerFullById = async (
  id: number,
): Promise<
  types.GetProducerFullByIdOkResponse | types.GetProducerFullByIdResponse
> => {
  return await client_fetch<never, types.GetProducerFullByIdResponse>(
    `producers/${id}/full`,
  );
};

/**
 * Returns producer&#39;s external links
 */
export const getProducerExternal = async (
  id: number,
): Promise<
  types.GetProducerExternalOkResponse | types.GetProducerExternalResponse
> => {
  return await client_fetch<never, types.GetProducerExternalResponse>(
    `producers/${id}/external`,
  );
};

/**
 * Returns a random anime resource
 */
export const getRandomAnime = async (): Promise<
  types.GetRandomAnimeOkResponse | types.GetRandomAnimeResponse
> => {
  return await client_fetch<never, types.GetRandomAnimeResponse>(
    `random/anime`,
  );
};

/**
 * Returns a random manga resource
 */
export const getRandomManga = async (): Promise<
  types.GetRandomMangaOkResponse | types.GetRandomMangaResponse
> => {
  return await client_fetch<never, types.GetRandomMangaResponse>(
    `random/manga`,
  );
};

/**
 * Returns a random character resource
 */
export const getRandomCharacters = async (): Promise<
  types.GetRandomCharactersOkResponse | types.GetRandomCharactersResponse
> => {
  return await client_fetch<never, types.GetRandomCharactersResponse>(
    `random/characters`,
  );
};

/**
 * Returns a random person resource
 */
export const getRandomPeople = async (): Promise<
  types.GetRandomPeopleOkResponse | types.GetRandomPeopleResponse
> => {
  return await client_fetch<never, types.GetRandomPeopleResponse>(
    `random/people`,
  );
};

/**
 * Returns a random user profile resource
 */
export const getRandomUsers = async (): Promise<
  types.GetRandomUsersOkResponse | types.GetRandomUsersResponse
> => {
  return await client_fetch<never, types.GetRandomUsersResponse>(
    `random/users`,
  );
};

/**
 * Returns recent anime recommendations
 */
export const getRecentAnimeRecommendations = async (): Promise<
  | types.GetRecentAnimeRecommendationsOkResponse
  | types.GetRecentAnimeRecommendationsResponse
> => {
  return await client_fetch<never, types.GetRecentAnimeRecommendationsResponse>(
    `recommendations/anime`,
  );
};

/**
 * Returns recent manga recommendations
 */
export const getRecentMangaRecommendations = async (): Promise<
  | types.GetRecentMangaRecommendationsOkResponse
  | types.GetRecentMangaRecommendationsResponse
> => {
  return await client_fetch<never, types.GetRecentMangaRecommendationsResponse>(
    `recommendations/manga`,
  );
};

/**
 * Returns recent anime reviews
 */
export const getRecentAnimeReviews = async (): Promise<
  types.GetRecentAnimeReviewsOkResponse | types.GetRecentAnimeReviewsResponse
> => {
  return await client_fetch<never, types.GetRecentAnimeReviewsResponse>(
    `reviews/anime`,
  );
};

/**
 * Returns recent manga reviews
 */
export const getRecentMangaReviews = async (): Promise<
  types.GetRecentMangaReviewsOkResponse | types.GetRecentMangaReviewsResponse
> => {
  return await client_fetch<never, types.GetRecentMangaReviewsResponse>(
    `reviews/manga`,
  );
};

/**
 * Returns weekly schedule
 */
export const getSchedules = async (
  args: types.GetSchedulesData,
): Promise<types.GetSchedulesOkResponse | types.GetSchedulesResponse> => {
  return await client_fetch<types.GetSchedulesData, types.GetSchedulesResponse>(
    `schedules`,
    args,
  );
};

/**
 * Returns search results for anime
 */
export const getAnimeSearch = async (
  args: types.GetAnimeSearchData,
): Promise<types.GetAnimeSearchOkResponse | types.GetAnimeSearchResponse> => {
  return await client_fetch<
    types.GetAnimeSearchData,
    types.GetAnimeSearchResponse
  >(`anime`, args);
};

/**
 * Returns search results for manga
 */
export const getMangaSearch = async (
  args: types.GetMangaSearchData,
): Promise<types.GetMangaSearchOkResponse | types.GetMangaSearchResponse> => {
  return await client_fetch<
    types.GetMangaSearchData,
    types.GetMangaSearchResponse
  >(`manga`, args);
};

/**
 * Returns search results for people
 */
export const getPeopleSearch = async (
  args: types.GetPeopleSearchData,
): Promise<types.GetPeopleSearchOkResponse | types.GetPeopleSearchResponse> => {
  return await client_fetch<
    types.GetPeopleSearchData,
    types.GetPeopleSearchResponse
  >(`people`, args);
};

/**
 * Returns search results for characters
 */
export const getCharactersSearch = async (
  args: types.GetCharactersSearchData,
): Promise<
  types.GetCharactersSearchOkResponse | types.GetCharactersSearchResponse
> => {
  return await client_fetch<
    types.GetCharactersSearchData,
    types.GetCharactersSearchResponse
  >(`characters`, args);
};

/**
 * Returns search results for users
 */
export const getUsersSearch = async (
  args: types.GetUsersSearchData,
): Promise<types.GetUsersSearchOkResponse | types.GetUsersSearchResponse> => {
  return await client_fetch<
    types.GetUsersSearchData,
    types.GetUsersSearchResponse
  >(`users`, args);
};

/**
 * Returns username by ID search
 */
export const getUserById = async (
  id: number,
): Promise<types.GetUserByIdOkResponse | types.GetUserByIdResponse> => {
  return await client_fetch<never, types.GetUserByIdResponse>(
    `users/userbyid/${id}`,
  );
};

/**
 * Returns search results for clubs
 */
export const getClubsSearch = async (
  args: types.GetClubsSearchData,
): Promise<types.GetClubsSearchOkResponse | types.GetClubsSearchResponse> => {
  return await client_fetch<
    types.GetClubsSearchData,
    types.GetClubsSearchResponse
  >(`clubs`, args);
};

/**
 * Returns producers collection
 */
export const getProducers = async (
  args: types.GetProducersData,
): Promise<types.GetProducersOkResponse | types.GetProducersResponse> => {
  return await client_fetch<types.GetProducersData, types.GetProducersResponse>(
    `producers`,
    args,
  );
};

/**
 * Returns current seasonal anime
 */
export const getSeasonNow = async (
  args: types.GetSeasonNowData,
): Promise<types.GetSeasonNowOkResponse | types.GetSeasonNowResponse> => {
  return await client_fetch<types.GetSeasonNowData, types.GetSeasonNowResponse>(
    `seasons/now`,
    args,
  );
};

/**
 * Returns seasonal anime
 */
export const getSeason = async (
  year: number,
  season: string,
  args: types.GetSeasonData,
): Promise<types.GetSeasonOkResponse | types.GetSeasonResponse> => {
  return await client_fetch<types.GetSeasonData, types.GetSeasonResponse>(
    `seasons/${year}/${season}`,
    args,
  );
};

/**
 * Returns available list of seasons
 */
export const getSeasonsList = async (): Promise<
  types.GetSeasonsListOkResponse | types.GetSeasonsListResponse
> => {
  return await client_fetch<never, types.GetSeasonsListResponse>(`seasons`);
};

/**
 * Returns upcoming season&#39;s anime
 */
export const getSeasonUpcoming = async (
  args: types.GetSeasonUpcomingData,
): Promise<
  types.GetSeasonUpcomingOkResponse | types.GetSeasonUpcomingResponse
> => {
  return await client_fetch<
    types.GetSeasonUpcomingData,
    types.GetSeasonUpcomingResponse
  >(`seasons/upcoming`, args);
};

/**
 * Returns top anime
 */
export const getTopAnime = async (
  args: types.GetTopAnimeData,
): Promise<types.GetTopAnimeOkResponse | types.GetTopAnimeResponse> => {
  return await client_fetch<types.GetTopAnimeData, types.GetTopAnimeResponse>(
    `top/anime`,
    args,
  );
};

/**
 * Returns top manga
 */
export const getTopManga = async (
  args: types.GetTopMangaData,
): Promise<types.GetTopMangaOkResponse | types.GetTopMangaResponse> => {
  return await client_fetch<types.GetTopMangaData, types.GetTopMangaResponse>(
    `top/manga`,
    args,
  );
};

/**
 * Returns top people
 */
export const getTopPeople = async (): Promise<
  types.GetTopPeopleOkResponse | types.GetTopPeopleResponse
> => {
  return await client_fetch<never, types.GetTopPeopleResponse>(`top/people`);
};

/**
 * Returns top characters
 */
export const getTopCharacters = async (): Promise<
  types.GetTopCharactersOkResponse | types.GetTopCharactersResponse
> => {
  return await client_fetch<never, types.GetTopCharactersResponse>(
    `top/characters`,
  );
};

/**
 * Returns top reviews
 */
export const getTopReviews = async (
  args: types.GetTopReviewsData,
): Promise<types.GetTopReviewsOkResponse | types.GetTopReviewsResponse> => {
  return await client_fetch<
    types.GetTopReviewsData,
    types.GetTopReviewsResponse
  >(`top/reviews`, args);
};

/**
 * Returns complete user resource data
 */
export const getUserFullProfile = async (
  username: string,
): Promise<
  types.GetUserFullProfileOkResponse | types.GetUserFullProfileResponse
> => {
  return await client_fetch<never, types.GetUserFullProfileResponse>(
    `users/${username}/full`,
  );
};

/**
 * Returns user profile
 */
export const getUserProfile = async (
  username: string,
): Promise<types.GetUserProfileOkResponse | types.GetUserProfileResponse> => {
  return await client_fetch<never, types.GetUserProfileResponse>(
    `users/${username}`,
  );
};

/**
 * Returns user statistics
 */
export const getUserStatistics = async (
  username: string,
): Promise<
  types.GetUserStatisticsOkResponse | types.GetUserStatisticsResponse
> => {
  return await client_fetch<never, types.GetUserStatisticsResponse>(
    `users/${username}/statistics`,
  );
};

/**
 * Returns user favorites
 */
export const getUserFavorites = async (
  username: string,
): Promise<
  types.GetUserFavoritesOkResponse | types.GetUserFavoritesResponse
> => {
  return await client_fetch<never, types.GetUserFavoritesResponse>(
    `users/${username}/favorites`,
  );
};

/**
 * Returns user updates
 */
export const getUserUpdates = async (
  username: string,
): Promise<types.GetUserUpdatesOkResponse | types.GetUserUpdatesResponse> => {
  return await client_fetch<never, types.GetUserUpdatesResponse>(
    `users/${username}/userupdates`,
  );
};

/**
 * Returns user about in raw HTML
 */
export const getUserAbout = async (
  username: string,
): Promise<types.GetUserAboutOkResponse | types.GetUserAboutResponse> => {
  return await client_fetch<never, types.GetUserAboutResponse>(
    `users/${username}/about`,
  );
};

/**
 * Returns user history (past 30 days)
 */
export const getUserHistory = async (
  username: string,
  args: types.GetUserHistoryData,
): Promise<types.GetUserHistoryOkResponse | types.GetUserHistoryResponse> => {
  return await client_fetch<
    types.GetUserHistoryData,
    types.GetUserHistoryResponse
  >(`users/${username}/history`, args);
};

/**
 * Returns user friends
 */
export const getUserFriends = async (
  username: string,
): Promise<types.GetUserFriendsOkResponse | types.GetUserFriendsResponse> => {
  return await client_fetch<never, types.GetUserFriendsResponse>(
    `users/${username}/friends`,
  );
};

/**
 * Returns user anime list
 */
export const getUserAnimelist = async (
  username: string,
  args: types.GetUserAnimelistData,
): Promise<
  types.GetUserAnimelistOkResponse | types.GetUserAnimelistResponse
> => {
  return await client_fetch<
    types.GetUserAnimelistData,
    types.GetUserAnimelistResponse
  >(`users/${username}/animelist`, args);
};

/**
 * Returns user manga list
 */
export const getUserMangaList = async (
  username: string,
  args: types.GetUserMangaListData,
): Promise<
  types.GetUserMangaListOkResponse | types.GetUserMangaListResponse
> => {
  return await client_fetch<
    types.GetUserMangaListData,
    types.GetUserMangaListResponse
  >(`users/${username}/mangalist`, args);
};

/**
 * Returns user reviews
 */
export const getUserReviews = async (
  username: string,
): Promise<types.GetUserReviewsOkResponse | types.GetUserReviewsResponse> => {
  return await client_fetch<never, types.GetUserReviewsResponse>(
    `users/${username}/reviews`,
  );
};

/**
 * Returns Recent Anime Recommendations
 */
export const getUserRecommendations = async (
  username: string,
): Promise<
  types.GetUserRecommendationsOkResponse | types.GetUserRecommendationsResponse
> => {
  return await client_fetch<never, types.GetUserRecommendationsResponse>(
    `users/${username}/recommendations`,
  );
};

/**
 * Returns user clubs
 */
export const getUserClubs = async (
  username: string,
): Promise<types.GetUserClubsOkResponse | types.GetUserClubsResponse> => {
  return await client_fetch<never, types.GetUserClubsResponse>(
    `users/${username}/clubs`,
  );
};

/**
 * Returns user&#39;s external links
 */
export const getUserExternal = async (
  username: string,
): Promise<types.GetUserExternalOkResponse | types.GetUserExternalResponse> => {
  return await client_fetch<never, types.GetUserExternalResponse>(
    `users/${username}/external`,
  );
};

/**
 * Returns Recently Added Episodes
 */
export const getWatchRecentEpisodes = async (): Promise<
  types.GetWatchRecentEpisodesOkResponse | types.GetWatchRecentEpisodesResponse
> => {
  return await client_fetch<never, types.GetWatchRecentEpisodesResponse>(
    `watch/episodes`,
  );
};

/**
 * Returns Popular Episodes
 */
export const getWatchPopularEpisodes = async (): Promise<
  | types.GetWatchPopularEpisodesOkResponse
  | types.GetWatchPopularEpisodesResponse
> => {
  return await client_fetch<never, types.GetWatchPopularEpisodesResponse>(
    `watch/episodes/popular`,
  );
};

/**
 * Returns Recently Added Promotional Videos
 */
export const getWatchRecentPromos = async (): Promise<
  types.GetWatchRecentPromosOkResponse | types.GetWatchRecentPromosResponse
> => {
  return await client_fetch<never, types.GetWatchRecentPromosResponse>(
    `watch/promos`,
  );
};

/**
 * Returns Popular Promotional Videos
 */
export const getWatchPopularPromos = async (): Promise<
  types.GetWatchPopularPromosOkResponse | types.GetWatchPopularPromosResponse
> => {
  return await client_fetch<never, types.GetWatchPopularPromosResponse>(
    `watch/promos/popular`,
  );
};
